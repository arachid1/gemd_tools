=============
Open Graph
=============

The OpenGraph class is a versatile tool designed to facilitate the creation and visualization of complex network structures from GEMD (General Experiment Metadata) objects. With its ability to interpret relationships between objects based on UUIDs and links, OpenGraph offers a seamless solution for generating insightful visual representations of data stored in GEMD files.

At its core, OpenGraph simplifies the process of building NetworkX or Graphviz objects from GEMD thin JSON files. By specifying a folder path containing these files, or also passing a list of GEMD objects, users can effortlessly establish connections between objects, allowing for the creation of visually appealing and informative graphs. The class offers a range of output options, from basic SVG images to detailed GraphML files, catering to various visualization needs.

One of the key features of OpenGraph is its flexibility in handling different types of GEMD objects. Users can specify which types of objects to include in the graph, such as processes, ingredients, materials, and measurements. Additionally, the class allows for the customization of graph layouts, the addition of bidirectional edges between nodes, and the inclusion of attributes, file links, and tags, providing users with a high degree of control over the visualization process.

With its intuitive interface and powerful features, OpenGraph is a valuable tool for researchers, scientists, and data analysts working with GEMD data. Whether visualizing complex experimental workflows or analyzing relationships between materials and processes, OpenGraph offers a robust and efficient solution for exploring and understanding GEMD datasets.

The **build_graph()** method is the heart of the OpenGraph class, responsible for constructing a NetworkX graph representation of the GEMD relationships. This method reads each object generated by the GEMDEncoder object, stores its links by UUID, and forms directed relationships such as ingredient->process or process->material. It allows for the filtering of mapped objects and saves graphs automatically in desired formats, providing a comprehensive view of the data relationships.

The **save_graph()** method is responsible for saving the generated graph to various formats, including SVG, DOT, and GraphML. This method ensures that users can easily export and share their visualizations, making it easier to communicate insights and findings derived from the GEMD data. By providing a range of output options, the save_graph method enhances the accessibility and usability of the OpenGraph class for a wide range of applications.

